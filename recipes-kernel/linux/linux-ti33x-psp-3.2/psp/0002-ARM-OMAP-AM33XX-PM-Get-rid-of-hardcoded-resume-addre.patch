From 29ed395e3c56764a994ed4528e10c8835359a34b Mon Sep 17 00:00:00 2001
From: Vaibhav Bedia <vaibhav.bedia@ti.com>
Date: Tue, 22 May 2012 12:02:02 +0530
Subject: [PATCH 02/18] ARM: OMAP: AM33XX: PM: Get rid of hardcoded resume
 address

Instead of using a harcoded resume address in the IPC registers
add a dynamically computed offset to the start of OCMC address.

Note: This approach currently assumes that the suspend-resume code
is the first block of code that is copied to internal RAM. Due to
the initcall level used by the SRAM mapping code this holds true.
Ideally the sram mapping code should provide an API for doing this.
This will be done at a later point of time when the generic SRAM
allocator gets merged in mainline kernel.

Signed-off-by: Vaibhav Bedia <vaibhav.bedia@ti.com>
---
 arch/arm/mach-omap2/pm.h        |    1 +
 arch/arm/mach-omap2/pm33xx.c    |    8 +++++++-
 arch/arm/mach-omap2/pm33xx.h    |    2 +-
 arch/arm/mach-omap2/sleep33xx.S |   16 +++-------------
 4 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 68aeafc..f7a7500 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -100,6 +100,7 @@ extern void omap3_save_scratchpad_contents(void);
 /* am33xx_do_wfi function pointer and size, for copy to SRAM */
 extern void am33xx_do_wfi(void);
 extern unsigned int am33xx_do_wfi_sz;
+extern unsigned int am33xx_resume_offset;
 /* ... and its pointer from SRAM after copy */
 extern void (*am33xx_do_wfi_sram)(void);
 /* The resume location */
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 70bcb42..c4c5187 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -217,7 +217,13 @@ static int am33xx_pm_begin(suspend_state_t state)
 
 	disable_hlt();
 
-	am33xx_lp_ipc.resume_addr = DS_RESUME_ADDR;
+	/*
+	 * Populate the resume address as part of IPC data
+	 * The offset to be added comes from sleep33xx.S
+	 * Add 4 bytes to ensure that resume happens from
+	 * the word *after* the word which holds the resume offset
+	 */
+	am33xx_lp_ipc.resume_addr = (DS_RESUME_BASE + am33xx_resume_offset + 4);
 	am33xx_lp_ipc.sleep_mode  = DS_MODE;
 	am33xx_lp_ipc.ipc_data1	  = DS_IPC_DEFAULT;
 	am33xx_lp_ipc.ipc_data2   = DS_IPC_DEFAULT;
diff --git a/arch/arm/mach-omap2/pm33xx.h b/arch/arm/mach-omap2/pm33xx.h
index f72c28e..7b3504b 100644
--- a/arch/arm/mach-omap2/pm33xx.h
+++ b/arch/arm/mach-omap2/pm33xx.h
@@ -47,7 +47,7 @@ struct am33xx_padconf {
 
 #define M3_TXEV_EOI			(AM33XX_CTRL_BASE + 0x1324)
 #define A8_M3_IPC_REGS			(AM33XX_CTRL_BASE + 0x1328)
-#define DS_RESUME_ADDR			0x40300340
+#define DS_RESUME_BASE			0x40300000
 #define DS_IPC_DEFAULT			0xffffffff
 #define M3_UMEM				0x44D00000
 
diff --git a/arch/arm/mach-omap2/sleep33xx.S b/arch/arm/mach-omap2/sleep33xx.S
index 69b49ea..9c57335 100644
--- a/arch/arm/mach-omap2/sleep33xx.S
+++ b/arch/arm/mach-omap2/sleep33xx.S
@@ -234,20 +234,10 @@ wait_emif_enable:
 	mov	r0, #7
 	ldmfd	sp!, {r4 - r11, pc}	@ restore regs and return
 
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
-	nop
+ENTRY(am33xx_resume_offset)
+	.word . - am33xx_do_wfi
 
+ENTRY(am33xx_resume_from_deep_sleep)
 	/* Take the PLLs out of LP_BYPASS */
 	pll_lock	mpu, phys_mpu_clk_mode, phys_mpu_idlest
 	pll_lock	per, phys_per_clk_mode, phys_per_idlest
-- 
1.7.7.6

