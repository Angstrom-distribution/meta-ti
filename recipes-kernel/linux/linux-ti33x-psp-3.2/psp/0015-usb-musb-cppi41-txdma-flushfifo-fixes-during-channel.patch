From a67c22912417f2b4c22f063767405992e702efbe Mon Sep 17 00:00:00 2001
From: Ravi B <ravibabu@ti.com>
Date: Thu, 10 May 2012 17:05:41 +0530
Subject: [PATCH 15/18] usb: musb: cppi41: txdma flushfifo fixes during
 channel abort

This patch fixes the flushfifo sequence during tx dma channel
abort, the txfifo should be flushed only when the TXPKTRDY bit
is set in TXCSR register.

Signed-off-by: Ravi B <ravibabu@ti.com>
---
 drivers/usb/musb/cppi41_dma.c |   14 +++++++++-----
 1 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/musb/cppi41_dma.c b/drivers/usb/musb/cppi41_dma.c
index bf74cf3..4367e4f 100644
--- a/drivers/usb/musb/cppi41_dma.c
+++ b/drivers/usb/musb/cppi41_dma.c
@@ -1198,7 +1198,7 @@ static int cppi41_channel_abort(struct dma_channel *channel)
 	void __iomem *reg_base, *epio;
 	unsigned long pd_addr;
 	u32 csr, td_reg;
-	u8 ch_num, ep_num;
+	u8 ch_num, ep_num, i;
 
 	cppi_ch = container_of(channel, struct cppi41_channel, channel);
 	ch_num = cppi_ch->ch_num;
@@ -1250,10 +1250,14 @@ static int cppi41_channel_abort(struct dma_channel *channel)
 		musb_writel(reg_base, cppi->teardown_reg_offs, td_reg);
 
 		/* Flush FIFO of the endpoint */
-		csr  = musb_readw(epio, MUSB_TXCSR);
-		csr |= MUSB_TXCSR_FLUSHFIFO | MUSB_TXCSR_H_WZC_BITS;
-		musb_writew(epio, MUSB_TXCSR, csr);
-		musb_writew(epio, MUSB_TXCSR, csr);
+		for (i = 0; i < 2; ++i) {
+			csr  = musb_readw(epio, MUSB_TXCSR);
+			if (csr & MUSB_TXCSR_TXPKTRDY) {
+				csr |= MUSB_TXCSR_FLUSHFIFO |
+					MUSB_TXCSR_H_WZC_BITS;
+				musb_writew(epio, MUSB_TXCSR, csr);
+			}
+		}
 	} else { /* Rx */
 		dprintk("Rx channel teardown, cppi_ch = %p\n", cppi_ch);
 
-- 
1.7.7.6

