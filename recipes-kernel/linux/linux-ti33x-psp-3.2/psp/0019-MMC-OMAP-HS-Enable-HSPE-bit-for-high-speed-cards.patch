From 97ffca5e70b312b81bdf095d1d2a104fdaa98aba Mon Sep 17 00:00:00 2001
From: "Philip, Avinash" <avinashphilip@ti.com>
Date: Mon, 4 Jun 2012 18:45:45 +0530
Subject: [PATCH 19/19] MMC: OMAP-HS: Enable HSPE bit for high speed cards.

By outputting CMD line and DAT lines at the rising edge of the SD clock,
setup timings is increased and allows reaching higher bus frequency.
This feature is activated by setting SD_HCTL[2] HSPE bit to 1. This is
required for High Speed Cards.

When card is operating at high speed, MMC/SD serial output clock is set
to >25 MHz. This patch makes use of this clock value to set HSPE.

Also, this bit will be cleared on card removal & for non-high speed
cards.

Tested on High speed cards (SDHC class 10, micro SDHC class 4) and
normal speed cards like SDHC class 4.

Signed-off-by: Philip, Avinash <avinashphilip@ti.com>
---
 drivers/mmc/host/omap_hsmmc.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 1f938d9..22da8f2 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -90,6 +90,7 @@
 #define MSBS			(1 << 5)
 #define BCE			(1 << 1)
 #define FOUR_BIT		(1 << 1)
+#define HSPE			(1 << 2)
 #define DVAL_MASK		(3 << 9)
 #define DVAL_MAX		(3 << 9)	/* 8.4 ms debounce period */
 #define WPP_MASK		(1 << 8)
@@ -634,14 +635,25 @@ static void omap_hsmmc_set_clock(struct omap_hsmmc_host *host)
 	struct mmc_ios *ios = &host->mmc->ios;
 	unsigned long regval;
 	unsigned long timeout;
+	unsigned long clkdiv;
 
 	dev_dbg(mmc_dev(host->mmc), "Set clock to %uHz\n", ios->clock);
 
+	clkdiv = calc_divisor(host, ios);
+	regval = OMAP_HSMMC_READ(host->base, HCTL);
+	/* Enable HSPE bit for high speed card */
+	if (ios->clock && (clk_get_rate(host->fclk)/clkdiv) > 25000000)
+		regval |= HSPE;
+	else
+		regval &= ~HSPE;
+
+	OMAP_HSMMC_WRITE(host->base, HCTL, regval);
+
 	omap_hsmmc_stop_clock(host);
 
 	regval = OMAP_HSMMC_READ(host->base, SYSCTL);
 	regval = regval & ~(CLKD_MASK | DTO_MASK);
-	regval = regval | (calc_divisor(host, ios) << 6) | (DTO << 16);
+	regval = regval | (clkdiv << 6) | (DTO << 16);
 	OMAP_HSMMC_WRITE(host->base, SYSCTL, regval);
 	OMAP_HSMMC_WRITE(host->base, SYSCTL,
 		OMAP_HSMMC_READ(host->base, SYSCTL) | ICE);
-- 
1.7.9.5

